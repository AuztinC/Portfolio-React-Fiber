/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 arc-scene-backdrop.gltf 
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'

export default function ArcSceneBackdrop(props) {
  const { nodes, materials } = useGLTF('../assets/obj/arc-scene/arc-scene-backdrop.gltf')
  useEffect(()=>{
    // materials['Wall'].transparent = true
    materials['Wall'].opacity = 0.1
    materials['Wall'].color.set('grey')
    // console.log(materials['Wall'])
  }, [])
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Floor.geometry} material={materials.Floor} position={[-10, -0.25, 0]} rotation={[-Math.PI / 2, 0, 0]} receiveShadow/>
      <mesh geometry={nodes.Wall.geometry} material={materials.Wall} position={[-8, 0.75, 1]} receiveShadow/>
      <group position={[1.811, -0.25, 0]} rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Cloud_1.geometry} material={materials['Cloud-Base']} castShadow/>
        <mesh geometry={nodes.Cloud_2.geometry} material={materials.Cloud} castShadow/>
        <mesh geometry={nodes.Cloud_3.geometry} material={materials['Cloud-Sword']} castShadow/>
      </group>
      <group position={[-2, -0.25, 0]} rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Cylinder_0139.geometry} material={materials['Cat-Base']} castShadow/>
        <mesh geometry={nodes.Cylinder_0139_1.geometry} material={materials.Cat} castShadow/>
      </group>
    </group>
  )
}

useGLTF.preload('../assets/obj/arc-scene/arc-scene-backdrop.gltf')
